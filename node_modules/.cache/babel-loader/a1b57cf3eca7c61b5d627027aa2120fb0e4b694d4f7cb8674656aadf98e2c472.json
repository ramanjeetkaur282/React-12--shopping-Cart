{"ast":null,"code":"import { uiActions } from \"./ui-slice\";\nimport { cartActions } from \"./cart-slice\";\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch('https://react-app-bf9c4-default-rtdb.firebaseio.com/cart.json');\n      if (!response.ok) {\n        throw new Error('Could not fetch cart data!');\n      }\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart({\n        items: cartData.items || [],\n        totalQuantity: cartData.totalQuantity\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Fetching cart data failed'\n      }));\n    }\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data!'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch('https://react-app-bf9c4-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify({\n          items: cart.items,\n          totalQuantity: cart.totalQuantity\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Sending cart data failed');\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success!',\n        message: 'Sent cart data successfully!'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Sending cart data failed'\n      }));\n    }\n  };\n};","map":{"version":3,"names":["uiActions","cartActions","fetchCartData","dispatch","fetchData","response","fetch","ok","Error","data","json","cartData","replaceCart","items","totalQuantity","error","showNotification","status","title","message","sendCartData","cart","sendRequest","method","body","JSON","stringify"],"sources":["/Users/ramanjeetkaur/Desktop/Projects/React 12- shopping Cart/src/store/cart-actions.js"],"sourcesContent":["import { uiActions } from \"./ui-slice\";\nimport { cartActions } from \"./cart-slice\";\n\nexport const fetchCartData = () => {\n    return async (dispatch) => {\n        const fetchData= async () => {\n            const response= await fetch(\n                'https://react-app-bf9c4-default-rtdb.firebaseio.com/cart.json'\n            );\n\n            if(!response.ok){\n                throw new Error('Could not fetch cart data!');\n            }\n\n            const data=await response.json();\n\n            return data;\n        }\n\n        try{\n            const cartData=await fetchData();\n            dispatch(\n                cartActions.replaceCart({\n                    items:cartData.items || [],\n                    totalQuantity: cartData.totalQuantity,\n                })\n            );\n        } catch (error){\n            dispatch(\n                uiActions.showNotification({\n                    status:'error',\n                    title: 'Error!',\n                    message: 'Fetching cart data failed',\n                })\n            );\n        }\n    };\n};\n\nexport const sendCartData =(cart)=>{\n    return async (dispatch) => {\n        dispatch(\n            uiActions.showNotification({\n                status:'pending',\n                title: 'Sending...',\n                message: 'Sending cart data!',\n            })\n        );\n\n        const sendRequest = async () => {\n            const response = await fetch(\n                'https://react-app-bf9c4-default-rtdb.firebaseio.com/cart.json',\n                {\n                    method: 'PUT',\n                    body: JSON.stringify({\n                        items: cart.items,\n                        totalQuantity: cart.totalQuantity,\n                    }),\n                }\n            );\n\n            if(!response.ok){\n                throw new Error('Sending cart data failed');\n            }\n        };\n\n        try{\n            await sendRequest();\n\n            dispatch(\n                uiActions.showNotification({\n                status:'success',\n                title: 'Success!',\n                message: 'Sent cart data successfully!',\n                })\n            );\n        } catch (error){\n            dispatch(\n               uiActions.showNotification({\n                status:'error',\n                title: 'Error!',\n                message: 'Sending cart data failed',\n               }) \n            )\n        }\n    }\n}"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;AACtC,SAASC,WAAW,QAAQ,cAAc;AAE1C,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC/B,OAAO,MAAOC,QAAQ,IAAK;IACvB,MAAMC,SAAS,GAAE,MAAAA,CAAA,KAAY;MACzB,MAAMC,QAAQ,GAAE,MAAMC,KAAK,CACvB,+DACJ,CAAC;MAED,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAC;QACZ,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MACjD;MAEA,MAAMC,IAAI,GAAC,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAEhC,OAAOD,IAAI;IACf,CAAC;IAED,IAAG;MACC,MAAME,QAAQ,GAAC,MAAMP,SAAS,CAAC,CAAC;MAChCD,QAAQ,CACJF,WAAW,CAACW,WAAW,CAAC;QACpBC,KAAK,EAACF,QAAQ,CAACE,KAAK,IAAI,EAAE;QAC1BC,aAAa,EAAEH,QAAQ,CAACG;MAC5B,CAAC,CACL,CAAC;IACL,CAAC,CAAC,OAAOC,KAAK,EAAC;MACXZ,QAAQ,CACJH,SAAS,CAACgB,gBAAgB,CAAC;QACvBC,MAAM,EAAC,OAAO;QACdC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACb,CAAC,CACL,CAAC;IACL;EACJ,CAAC;AACL,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGC,IAAI,IAAG;EAC/B,OAAO,MAAOlB,QAAQ,IAAK;IACvBA,QAAQ,CACJH,SAAS,CAACgB,gBAAgB,CAAC;MACvBC,MAAM,EAAC,SAAS;MAChBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACb,CAAC,CACL,CAAC;IAED,MAAMG,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CACxB,+DAA+D,EAC/D;QACIiB,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBb,KAAK,EAAEQ,IAAI,CAACR,KAAK;UACjBC,aAAa,EAAEO,IAAI,CAACP;QACxB,CAAC;MACL,CACJ,CAAC;MAED,IAAG,CAACT,QAAQ,CAACE,EAAE,EAAC;QACZ,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC/C;IACJ,CAAC;IAED,IAAG;MACC,MAAMc,WAAW,CAAC,CAAC;MAEnBnB,QAAQ,CACJH,SAAS,CAACgB,gBAAgB,CAAC;QAC3BC,MAAM,EAAC,SAAS;QAChBC,KAAK,EAAE,UAAU;QACjBC,OAAO,EAAE;MACT,CAAC,CACL,CAAC;IACL,CAAC,CAAC,OAAOJ,KAAK,EAAC;MACXZ,QAAQ,CACLH,SAAS,CAACgB,gBAAgB,CAAC;QAC1BC,MAAM,EAAC,OAAO;QACdC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACV,CAAC,CACJ,CAAC;IACL;EACJ,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}